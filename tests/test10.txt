MOVI 1 10    // R1 = 10 (calculate 10th Fibonacci number)
MOVI 2 0     // R2 = 0 (Fib(0))
MOVI 3 1     // R3 = 1 (Fib(1))
MOVI 4 1     // R4 = 1 (loop counter, starting from 1)
BR 0 6       // Jump to instruction 6 (first condition check)
ADD 5 2 3    // R5 = R2 + R3 = Fib(n-2) + Fib(n-1) = Fib(n)
MOVI 2 0     // Clear R2
ADD 2 3      // R2 = R3 (Fib(n-2) = Fib(n-1))
MOVI 3 0     // Clear R3
ADD 3 5      // R3 = R5 (Fib(n-1) = Fib(n))
ADD 4 4      // R4 = R4 + 1 (increment counter)
SUB 5 1 4    // R5 = R1 - R4 = n - counter
BEQZ 5 2     // If R5 == 0, branch to end
BR 0 3       // Jump back to instruction 3 (loop body)
MOVI 6 300   // R6 = 300 (memory address)
STR 3 6      // MEM[300] = R3 = 55
MOVI 7 0     // R7 = 0 (clear)
LDR 7 6      // R7 = MEM[300] = 55